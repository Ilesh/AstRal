// Generated by Apple Swift version 3.0.2 (swiftlang-800.0.63 clang-800.0.42.1)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if defined(__has_attribute) && __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if defined(__has_feature) && __has_feature(modules)
@import UIKit;
@import ObjectiveC;
@import CoreLocation;
@import MapKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class UIWindow;
@class UIApplication;

SWIFT_CLASS("_TtC7Strands11AppDelegate")
@interface AppDelegate : UIResponder <UIApplicationDelegate>
@property (nonatomic, strong) UIWindow * _Nullable window;
- (BOOL)application:(UIApplication * _Nonnull)application didFinishLaunchingWithOptions:(NSDictionary<UIApplicationLaunchOptionsKey, id> * _Nullable)launchOptions;
- (void)applicationWillResignActive:(UIApplication * _Nonnull)application;
- (void)applicationDidEnterBackground:(UIApplication * _Nonnull)application;
- (void)applicationWillEnterForeground:(UIApplication * _Nonnull)application;
- (void)applicationDidBecomeActive:(UIApplication * _Nonnull)application;
- (void)applicationWillTerminate:(UIApplication * _Nonnull)application;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class CLLocationManager;
@class CLLocation;
@class CLHeading;

SWIFT_CLASS("_TtC7Strands8Location")
@interface Location : NSObject <CLLocationManagerDelegate>
@property (nonatomic, readonly, strong) CLLocationManager * _Nonnull locManager;
@property (nonatomic, strong) CLLocation * _Nullable currentLocation;
@property (nonatomic, strong) CLHeading * _Nullable currentHeading;
@property (nonatomic, copy) NSString * _Null_unspecified dataString;
- (BOOL)initLocation SWIFT_METHOD_FAMILY(none);
- (CLLocation * _Nonnull)getPolarCoords:(double)distance bearingDegrees:(double)bearingDegrees;
- (NSInteger)getBearingFromTwoCoords:(CLLocation * _Nonnull)location1 location2:(CLLocation * _Nonnull)location2;
- (NSInteger)getBearingFromTwo2dPoints:(double)point1X point1Y:(double)point1Y point2X:(double)point2X point2Y:(double)point2Y;
- (NSInteger)getDistanceBetweenTwo2dPoints:(double)point1X point1Y:(double)point1Y point2X:(double)point2X point2Y:(double)point2Y;
- (double)getBearingFromHorizontalTap:(double)tapX;
- (double)getDistFromVerticalTap:(double)tapX tapY:(double)tapY phonePitch:(double)phonePitch;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didUpdateHeading:(CLHeading * _Nonnull)newHeading;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didUpdateLocations:(NSArray<CLLocation *> * _Nonnull)locations;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class MKMapView;
@protocol mapActionDelegate;
@class MKPointAnnotation;
@class UIView;
@class UITapGestureRecognizer;
@class UIImage;
@protocol MKAnnotation;
@class MKAnnotationView;

SWIFT_CLASS("_TtC7Strands3Map")
@interface Map : NSObject <MKMapViewDelegate>
@property (nonatomic, strong) MKMapView * _Nonnull mapView;
@property (nonatomic, strong) id <mapActionDelegate> _Nullable mapActionDelegate;
@property (nonatomic) BOOL tapMapToPost;
@property (nonatomic, strong) MKPointAnnotation * _Null_unspecified tempPin;
- (void)renderMap:(UIView * _Nonnull)view;
- (MKCoordinateRegion)centerToLocationRegion:(CLLocation * _Nonnull)location;
- (void)addStrandMapTapRecognizer;
- (void)wrapTappedMap:(UITapGestureRecognizer * _Nonnull)touch;
- (void)cancelTempStrand;
@property (nonatomic) NSInteger pcount;
- (void)updateSinglePin:(CLLocation * _Nonnull)coord temp:(BOOL)temp;
- (void)updatePins:(NSArray<CLLocation *> * _Nonnull)coords;
- (void)getMapAsIMG:(void (^ _Nonnull)(UIImage * _Nonnull))completion;
- (MKAnnotationView * _Nullable)mapView:(MKMapView * _Nonnull)mapView viewForAnnotation:(id <MKAnnotation> _Nonnull)annotation;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP7Strands23NetworkResponseDelegate_")
@protocol NetworkResponseDelegate
@optional
- (void)regionDataResponse:(NSString * _Nonnull)responseStr;
- (void)userLoggedinResponse:(NSString * _Nonnull)responseStr;
- (void)addedStrandResponse:(NSString * _Nonnull)responseStr;
- (void)userStrandsResponse:(NSString * _Nonnull)responseStr;
- (void)deletedStrandResponse:(NSString * _Nonnull)responseStr;
- (void)strandCommentsResponse:(NSString * _Nonnull)responseStr;
- (void)postedCommentResponse:(NSString * _Nonnull)responseStr;
- (void)updatedUserDataResponse:(NSString * _Nonnull)responseStr;
@end


SWIFT_PROTOCOL("_TtP7Strands16UIActionDelegate_")
@protocol UIActionDelegate
@optional
- (void)toggleMap:(BOOL)isAddingStrand;
- (void)openLoginForm;
- (void)addStrandReady:(NSString * _Nonnull)comment;
- (void)renderTempStrandFromUI:(NSInteger)tapX tapY:(NSInteger)tapY;
- (void)cancelNewStrand;
- (void)loginRequest:(NSString * _Nonnull)username password:(NSString * _Nonnull)password;
- (void)updateUserDataRequest:(NSString * _Nonnull)username password:(NSString * _Nonnull)password fullname:(NSString * _Nonnull)fullname email:(NSString * _Nonnull)email;
- (void)logoutUser;
- (void)requestUserStrands;
- (void)deleteStrandRequest:(NSInteger)realID;
- (void)chooseStrandComments:(NSInteger)tapX tapY:(NSInteger)tapY;
- (void)postNewComment:(NSString * _Nonnull)commentText;
@end


SWIFT_PROTOCOL("_TtP7Strands17mapActionDelegate_")
@protocol mapActionDelegate
@optional
- (void)renderTempStrandFromMap:(CLLocationCoordinate2D)mapTapCoord;
@end

@class CMMotionManager;
@class WebSocket;
@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC7Strands14ViewController")
@interface ViewController : UIViewController <NetworkResponseDelegate, UIActionDelegate, mapActionDelegate>
@property (nonatomic, strong) Location * _Nonnull location;
@property (nonatomic, strong) CMMotionManager * _Nonnull motionManager;
@property (nonatomic, strong) Map * _Nonnull map;
@property (nonatomic) BOOL firstRender;
@property (nonatomic) double thresholdDistRerender;
@property (nonatomic, strong) CLLocation * _Null_unspecified oldRenderPosition;
@property (nonatomic, strong) WebSocket * _Null_unspecified networkWebSocket;
@property (nonatomic, strong) CLLocation * _Null_unspecified currentLocation;
@property (nonatomic, strong) CLHeading * _Null_unspecified currentHeading;
@property (nonatomic) MKMapPoint tempStrandMapPoint;
@property (nonatomic, copy) NSArray<CLLocation *> * _Nonnull coordPoints;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull realStrandIDs;
- (void)toggleMap:(BOOL)isAddingStrand;
- (void)renderRelStrands:(BOOL)newRender;
- (void)regionDataUpdate:(CLLocation * _Nonnull)currentLocation currentHeading:(CLHeading * _Nonnull)currentHeading;
- (void)regionDataResponse:(NSString * _Nonnull)responseStr;
@property (nonatomic) BOOL addTempFirst;
@property (nonatomic) NSInteger phonePitch;
@property (nonatomic, strong) CLLocation * _Null_unspecified latestDesiredStrandLocation;
- (void)renderTempStrandFromMap:(CLLocationCoordinate2D)mapTapCoord;
- (void)renderTempStrandFromUI:(NSInteger)tapX tapY:(NSInteger)tapY;
- (void)addStrandTemp:(CLLocation * _Nonnull)strandLocation;
- (void)addStrandReady:(NSString * _Nonnull)comment;
- (void)addedStrandResponse:(NSString * _Nonnull)responseStr;
- (void)cancelNewStrand;
- (void)requestUserStrands;
- (void)userStrandsResponse:(NSString * _Nonnull)responseStr;
- (void)updateUserDataRequest:(NSString * _Nonnull)username password:(NSString * _Nonnull)password fullname:(NSString * _Nonnull)fullname email:(NSString * _Nonnull)email;
- (void)updatedUserDataResponse:(NSString * _Nonnull)responseStr;
- (void)loginRequest:(NSString * _Nonnull)username password:(NSString * _Nonnull)password;
- (void)userLoggedinResponse:(NSString * _Nonnull)responseStr;
- (void)logoutUser;
- (void)getStrandComments:(NSInteger)strandID;
@property (nonatomic) NSInteger viewingStrandID;
- (void)chooseStrandComments:(NSInteger)tapX tapY:(NSInteger)tapY;
- (void)strandCommentsResponse:(NSString * _Nonnull)responseStr;
- (void)postNewComment:(NSString * _Nonnull)commentText;
- (void)postedCommentResponse:(NSString * _Nonnull)responseStr;
- (void)deleteStrandRequest:(NSInteger)realID;
- (void)deletedStrandResponse:(NSString * _Nonnull)responseStr;
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


#pragma clang diagnostic pop
